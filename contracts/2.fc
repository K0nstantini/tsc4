{-
  TASK 2 - Matrix multiplier
  Write the method that multiplies one matrix by another.
  The 1st and 2nd parameter of the function will contain
  a matrix implemented using tuples (eg: [[1,2], [3,4]]).
  Matrices can be of different sizes, ranging from 4x4
  up to 32x32.
  Matrix can be rectangular where matrixA must to be of size n*m & matrixB of size m*p.
  After calculating the result matrix, the function should return final result (as tuple).
-}

#include "imports/stdlib.fc";

int tuple_length (tuple t) asm "TLEN";
forall X -> (tuple, X) ~tpop (tuple t) asm "TPOP";
forall X -> int is_tuple (X x) asm "ISTUPLE";
forall X -> tuple cast_to_tuple (X x) asm "NOP";
forall X -> int cast_to_int (X x) asm "NOP";
forall X -> (tuple) to_tuple (X x) asm "NOP";

() recv_internal() {
}

;; testable
(tuple) matrix_multiplier(tuple matrixA, tuple matrixB) method_id {
;;     repeat (matrixA.tuple_length()) {
;;         var row = matrixA~tpop();
;;         repeat (row.tuple_length()) {
;;
;;         }
;;         if (is_tuple(value)) {
;;             tuple tuple_value = cast_to_tuple(value);
;;             iterate_tuple(tuple_value);
;;         } else {
;;             if(value > max_value) {
;;                 max_value = value;
;;             }
;;         }
;;     }
    return null();
}

